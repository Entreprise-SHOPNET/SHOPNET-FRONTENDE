pluginManagement {
    // Charge le plugin React Native Gradle
    includeBuild(new File([
        "node", 
        "--print", 
        "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })"
    ].execute(null, rootDir).text.trim()).getParentFile().toString())
}

plugins {
    id("com.facebook.react.settings")
}

extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->
    if (System.getenv("EXPO_USE_COMMUNITY_AUTOLINKING") == "1") {
        // Autolinking standard RN
        ex.autolinkLibrariesFromCommand()
    } else {
        // Autolinking via Expo Modules
        def command = [
            "node",
            "--no-warnings",
            "--eval",
            "require(require.resolve('expo-modules-autolinking', { paths: [require.resolve('expo/package.json')] }))(process.argv.slice(1))",
            "react-native-config",
            "--json",
            "--platform",
            "android"
        ].toList()
        ex.autolinkLibrariesFromCommand(command)
    }
}

rootProject.name = "Shopnet"

dependencyResolutionManagement {
    versionCatalogs {
        reactAndroidLibs {
            from(files(new File([
                "node", 
                "--print", 
                "require.resolve('react-native/package.json')"
            ].execute(null, rootDir).text.trim(), "../gradle/libs.versions.toml")))
        }
    }
}

// Active Expo Modules
apply from: new File([
    "node", 
    "--print", 
    "require.resolve('expo/package.json')"
].execute(null, rootDir).text.trim(), "../scripts/autolinking.gradle")

useExpoModules()

// Inclut lâ€™application Android
include(":app")

// Inclut le React Native Gradle Plugin
includeBuild(new File([
    "node", 
    "--print", 
    "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })"
].execute(null, rootDir).text.trim()).getParentFile())
